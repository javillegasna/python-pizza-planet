name: CI_Pizza_Planet

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

concurrency: 
  group: CI_P_P_${{github.ref}}
  cancel-in-progress: true

jobs:
  install_dependencies:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout to feature branch
        uses: actions/checkout@v3

      - name: Creating or Restoring .venv cache
        id: cached_venv
        uses: actions/cache@v3
        with:
          path : .venv
          key: CI_P_P_${{hashFiles('requirements.txt')}}
      
      - name: Creating virtual environment 
        if: steps.cached_venv.outputs.cache-hit != true
        run: make  create_environment

      - name: Install dependencies
        if: steps.venv-cache.outputs.cache-hit != true
        run: make install_dependencies 

  run_lint:
    runs-on: ubuntu-22.04
    needs: [install_dependencies]
    steps:
      - name: Checkout to feature branch
        uses: actions/checkout@v3

      - name: Restoring cached venv
        id: cached_venv
        uses: actions/cache@v3
        with:
          path : .venv
          key: CI_P_P_${{hashFiles('requirements.txt')}} 

      - name: Run lint
        run: make run_lint

  run_tests:
    runs-on: ubuntu-22.04
    needs: [install_dependencies]
    steps:
      - name: Checkout to feature branch
        uses: actions/checkout@v3

      - name: Restoring cached venv
        id: cached_venv
        uses: actions/cache@v3
        with:
          path : .venv
          key: CI_P_P_${{hashFiles('requirements.txt')}}

      - name: Run tests
        run: make run_tests

  run_coverage:
    runs-on: ubuntu-22.04
    needs: [run_lint, run_tests]
    steps:
      - name: Checkout to feature branch
        uses: actions/checkout@v3

      - name: Restoring cached venv
        id: cached_venv
        uses: actions/cache@v3
        with:
          path : .venv
          key: CI_P_P_${{hashFiles('requirements.txt')}}

      - name: Run coverage report
        run: make run_coverage_report
      
      - name: Comment coverage
        uses: ewjoachim/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}
          MINIMUM_GREEN: 90